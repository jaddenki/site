---
import Layout from './Layout.astro';

const { frontmatter } = Astro.props;
const formattedDate = frontmatter.date ? new Date(frontmatter.date).toISOString().split('T')[0] : '';
---

<Layout title={`${frontmatter.title}`}>
  <div class="mb-6 sm:mb-8 flex flex-wrap gap-4 sm:gap-6">
    <a 
      href="/" 
      class="text-secondary hover:text-accent transition-colors inline-flex items-center gap-2 font-['PolySans-Neutral']"
    >
      <span>&lt;</span>
      <span>back to home</span>
    </a>
    <a 
      href="/notebook" 
      class="text-secondary hover:text-accent transition-colors inline-flex items-center gap-2 font-['PolySans-Neutral']"
    >
      <span>&lt;</span>
      <span>back to notebook</span>
    </a>
  </div>

  <article class="mb-20 sm:mb-32">
    <header class="mb-10 sm:mb-16">
      <div class="text-sm text-accent mb-3 sm:mb-4 font-['PolySans-Neutral']">
        {formattedDate}
      </div>
      <h1 class="mb-6 sm:mb-8 font-['PolySans-Neutral'] text-4xl sm:text-6xl">
        {frontmatter.title}
      </h1>
      <p class="text-secondary text-base sm:text-lg font-['PolySans-Neutral']">
        {frontmatter.description}
      </p>
      {frontmatter.tags && (
        <div class="flex flex-wrap gap-2 mt-4">
          {frontmatter.tags.map((tag: string) => (
            <span class="px-2 py-1 text-sm rounded-full bg-muted text-secondary font-['PolySans-Neutral']">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>

    {frontmatter.image && (
      <div class="mb-10 sm:mb-16 aspect-video bg-muted rounded-lg overflow-hidden">
        {frontmatter.image.match(/\.(mp4|webm|mov)$/i) ? (
          <video
            src={frontmatter.image}
            autoplay
            loop
            muted
            playsinline
            class="w-full h-full object-cover"
          />
        ) : (
          <img
            src={frontmatter.image}
            alt={frontmatter.title}
            loading="lazy"
            class="w-full h-full object-cover"
          />
        )}
      </div>
    )}

    <div class="prose prose-lg sm:prose-xl text-secondary max-w-none mb-12 sm:mb-16 font-['PolySans-Neutral']">
      <slot />
    </div>

    <footer class="border-t border-muted pt-6 sm:pt-8">
      <a 
        href="#top" 
        class="text-secondary hover:text-accent transition-colors inline-flex items-center gap-2 font-['PolySans-Neutral']"
      >
        <span>^</span>
        <span>back to top</span>
      </a>
    </footer>
  </article>
</Layout>

<style is:global>
  .prose {
    font-family: 'PolySans-Neutral';
    font-size: 1.125rem;
    line-height: 1.75;
  }
  .prose strong {
    color: var(--accent);

  }

    .prose ul {
    list-style-type: none;
    padding-left: 1rem;
  }

  .prose ol {
    padding-left: 1.5rem;
  }

  .prose ul li {
    position: relative;
    margin-bottom: 0.75rem;
    font-family: 'PolySans-Neutral';
  }

  .prose ul li::before {
    content: '';
    position: absolute;
    left: -1rem;
    top: 0.75rem;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background-color: var(--accent);
  }

  .prose ol li {
    margin-bottom: 0.75rem;
    font-family: 'PolySans-Neutral';
  }

  .prose h2 {
    font-family: 'PolySans-Neutral';
    font-size: 1.5rem;
    margin-top: 2.5rem;
    margin-bottom: 1.5rem;
    color: var(--foreground);
  }

  .prose h3 {
    font-family: 'Redaction-35';
    font-size: 1.25rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--accent);
  }

  .prose a {
    color: var(--accent);
    text-decoration: none;
    transition: all 0.2s ease;
    font-family: 'PolySans-Neutral';
  }

  .prose a:hover {
    text-decoration: underline;
  }

  .prose ul {
    list-style-type: none;
    padding-left: 1rem;
  }

  .prose li {
    position: relative;
    margin-bottom: 0.75rem;
    font-family: 'PolySans-Neutral';
  }

  .prose pre {
    background-color: var(--muted);
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  .prose img {
    display: block;
    margin: 2.5rem auto;
    max-width: 100%;
    height: auto;
    border-radius: 0.75rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: transform 0.2s ease;
  }

  .prose img:hover {
    transform: scale(1.01);
  }
  .prose code {
    font-family: 'JetBrains Mono', monospace;
    font-size: 0.875em;
    color: var(--accent);
  }
  
  /* Add highlighting with accent color */
  ::selection {
    background-color: var(--accent);
    color: var(--background);
  }

  /* Footnote styling */
  .prose .footnote-ref {
    color: var(--accent);
    text-decoration: none;
    font-size: 0.875em;
    vertical-align: super;
    line-height: 0;
    margin-left: 0.125rem;
    transition: all 0.2s ease;
  }

  .prose .footnote-ref:hover {
    text-decoration: underline;
  }

  .prose .footnote-back {
    color: var(--accent);
    text-decoration: none;
    margin-left: 0.25rem;
    font-size: 0.875em;
  }

  .prose .footnote-back:hover {
    text-decoration: underline;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Highlight target footnote when scrolled to */
  .prose .footnote-item:target {
    background-color: var(--accent-transparent, rgba(0, 0, 255, 0.1));
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: background-color 0.3s ease;
  }

  /* Mobile optimization for code blocks */
  @media (max-width: 640px) {
    .prose pre {
      padding: 0.75rem;
      font-size: 0.875rem;
    }
    
    .prose code {
      font-size: 0.875em;
      word-break: break-word;
    }
  }
</style> 